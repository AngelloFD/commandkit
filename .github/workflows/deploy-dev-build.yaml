name: Publish Dev Build

on:
    push:
        branches:
            - master
        paths:
            - 'packages/commandkit/**'

jobs:
    release:
        name: 🚀 Publish Dev Build
        runs-on: ubuntu-latest
        steps:
            - uses: pnpm/action-setup@v2
              with:
                  version: 8

            - name: 📚 Checkout
              uses: actions/checkout@v3

            - name: 🟢 Node
              uses: actions/setup-node@v2
              with:
                  node-version: 18
                  registry-url: https://registry.npmjs.org

            - name: 🍳 Prepare
              run: pnpm install

            - name: 🔢 Update Version
              run: |
                  cd packages/commandkit
                  node -e "const pkg = require('./package.json'); \
                  const newVersion = pkg.version + '-dev.' + new Date().toISOString().replace(/[:\-T]/g, '').substr(0,14); \
                  pkg.version = newVersion; \
                  require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, 2));"
              env:
                  DEBIAN_FRONTEND: noninteractive

            - name: 🚚 Publish
              run: pnpm run deploy:package-dev
              env:
                  NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}

            - name: 🚫 Deprecate Older Dev Versions
              run: |
                  PACKAGE_NAME=$(node -e "console.log(require('./packages/commandkit/package.json').name);")
                  ALL_VERSIONS=$(npm info $PACKAGE_NAME versions -json)
                  OLD_DEV_VERSIONS=$(echo $ALL_VERSIONS | node -e "
                      const versions = JSON.parse(require('fs').readFileSync('/dev/stdin', 'utf-8'));
                      const devVersions = versions.filter(v => v.includes('-dev')).sort().slice(0, -1); // exclude the latest dev version
                      console.log(devVersions.join(' '));
                  ")

                  for VERSION in $OLD_DEV_VERSIONS; do
                      npm deprecate $PACKAGE_NAME@$VERSION "Deprecated dev version"
                  done
              env:
                  NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
