import { type ClientOptions, IntentsBitField } from 'discord.js';
import { getConfig } from '../../config';

function stripIndents(strings: TemplateStringsArray, ...values: any[]) {
    const raw = strings.raw;
    let result = '';

    for (let i = 0; i < raw.length; i++) {
        result += strings[i].replace(/\\`/g, '`') + (values[i] ?? '');
    }

    return result;
}

function maybeEncrypt(token?: string) {
    if (!token) return '';

    // make the token less obvious
    const value = JSON.stringify([...token].map((c) => c.charCodeAt(0)));

    // this should only occur if token is specified in the config file, otherwise it will directly lookup `process.env.DISCORD_TOKEN`
    return `process.env.DISCORD_TOKEN ??= String.fromCharCode(...${value})`;
}

// TODO: make this work
export function generateClientScript() {
    const { clientOptions, token } = getConfig();

    const config: ClientOptions = {
        ...clientOptions,
        intents: IntentsBitField.resolve(clientOptions.intents),
    };

    const src = stripIndents`// Auto-generated by CommandKit. Do not modify.
    import { Client } from 'discord.js';
    import { registerClient } from 'commandkit';

    ${maybeEncrypt(token)}

    const client = new Client(${JSON.stringify(config)});
    
    await registerClient(client);
    await client.login();
    `;
}
