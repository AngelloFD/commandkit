// @ts-check

import { build } from 'tsup';
import { Colors, erase, findCommandKitJSON, panic, write } from './common.mjs';
import ora from 'ora';

export async function bootstrapProductionBuild(config) {
    const { minify = false, outDir = 'dist', main, src } = findCommandKitJSON(config);

    const status = ora('Creating optimized production build...\n').start();
    const start = performance.now();

    erase(outDir);

    try {
        await build({
            clean: true,
            format: ['esm'],
            dts: false,
            skipNodeModulesBundle: true,
            minify,
            shims: true,
            banner: {
                js: '/* Optimized production build of your project, generated by CommandKit */',
            },
            sourcemap: false,
            keepNames: true,
            outDir,
            silent: true,
            entry: [src, '!dist', '!.commandkit'],
        });

        status.succeed(
            Colors.green(`Build completed in ${(performance.now() - start).toFixed(2)}ms!`),
        );
        write(
            Colors.green(
                `\nRun ${Colors.magenta(`node ${outDir}/${main}`)} ${Colors.green(
                    'to start your bot.',
                )}`,
            ),
        );
    } catch (e) {
        status.fail(`Build failed after ${(performance.now() - start).toFixed(2)}ms!`);
        panic(e);
    }
}
